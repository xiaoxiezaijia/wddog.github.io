<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>帅气的狗头</title>
  <icon>https://www.gravatar.com/avatar/03bda83e263545c3eb7af2e98e24701d</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.wddog.cn/"/>
  <updated>2018-03-19T06:35:56.476Z</updated>
  <id>http://blog.wddog.cn/</id>
  
  <author>
    <name>xiaoxie</name>
    <email>15270841285@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>腾讯云centos7 搭建 FTP.md</title>
    <link href="http://blog.wddog.cn/2018/03/19/%E8%85%BE%E8%AE%AF%E4%BA%91centos7%20%E6%90%AD%E5%BB%BA%20FTP/"/>
    <id>http://blog.wddog.cn/2018/03/19/腾讯云centos7 搭建 FTP/</id>
    <published>2018-03-19T06:18:40.705Z</published>
    <updated>2018-03-19T06:35:56.476Z</updated>
    
    <content type="html"><![CDATA[<p>下面开始介绍 FTP 的搭建过程，异常简单</p><h3 id="使用-yum-安装-vsftpd"><a href="#使用-yum-安装-vsftpd" class="headerlink" title="使用 yum 安装 vsftpd"></a>使用 yum 安装 vsftpd</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install vsftpd // 这样就安装好了 服务</span><br><span class="line"></span><br><span class="line">service vsftpd start // 启动 ftp 服务</span><br></pre></td></tr></table></figure><h3 id="修改配置文件-现在配置文件的修改很简单"><a href="#修改配置文件-现在配置文件的修改很简单" class="headerlink" title="修改配置文件(现在配置文件的修改很简单)"></a>修改配置文件(现在配置文件的修改很简单)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/vsftpd/vsftpd.conf</span><br><span class="line"></span><br><span class="line">// 找到 anonymous_enable=YES (可输入 /anonymous 搜索定位)</span><br><span class="line"></span><br><span class="line">// 修改为 anonymous_enable=NO 不允许匿名登录</span><br><span class="line"></span><br><span class="line">// 找到 去掉前面的 # (这三个一般都在一起)</span><br><span class="line"></span><br><span class="line"># chroot_local_user=YES</span><br><span class="line"></span><br><span class="line"># chroot_list_enable=YES</span><br><span class="line"></span><br><span class="line"># chroot_list_file=/etc/vsftpd/chroot_list // 这里面需放入创建的 ftp 用户名里面存在的用户才能登录</span><br><span class="line"></span><br><span class="line">// 最后 保存文件</span><br><span class="line"></span><br><span class="line">shift+: 输入 wq 保存退出</span><br></pre></td></tr></table></figure><h3 id="创建用户-并-重启-ftp"><a href="#创建用户-并-重启-ftp" class="headerlink" title="创建用户 并 重启 ftp"></a>创建用户 并 重启 ftp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">// 以下操作需要 root 权限</span><br><span class="line"></span><br><span class="line">cd / 切换到根目录</span><br><span class="line"></span><br><span class="line">mkdir ftp // 创建 ftp 用户的操作目录</span><br><span class="line"></span><br><span class="line">chmod -R 777 ftp // 设置权限为全部</span><br><span class="line"></span><br><span class="line">// 创建用户 目录为 /ftp 设置为 ftp 用户 -s /sbin/nologin 不可登录服务器 用户名 test</span><br><span class="line"></span><br><span class="line">useradd -d /ftp -g ftp -s /sbin/nologin test</span><br><span class="line"></span><br><span class="line">// 为用户设置密码</span><br><span class="line"></span><br><span class="line">passwd test </span><br><span class="line"></span><br><span class="line">输入一次密码</span><br><span class="line">确认密码</span><br><span class="line"></span><br><span class="line">vim /etc/vsftpd/chroot_list // 打开用户列表文件</span><br><span class="line"></span><br><span class="line">按 i 输入刚才创建的 用户 test 没增加一个用户都得在此文件添加用户名 并重启 vsftpd 服务 </span><br><span class="line"></span><br><span class="line">重启 ftp </span><br><span class="line"></span><br><span class="line">service vsftpd restart</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      simple
    
    </summary>
    
      <category term="centos" scheme="http://blog.wddog.cn/categories/centos/"/>
    
    
      <category term="腾讯云" scheme="http://blog.wddog.cn/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
      <category term="Linux" scheme="http://blog.wddog.cn/tags/Linux/"/>
    
      <category term="FTP" scheme="http://blog.wddog.cn/tags/FTP/"/>
    
  </entry>
  
  <entry>
    <title>阿里云ECS centos7.3 搭建 lamp 环境</title>
    <link href="http://blog.wddog.cn/2018/03/16/%E9%98%BF%E9%87%8C%E4%BA%91ECS%20centos%207.3%20%E6%90%AD%E5%BB%BA%20lamp%20%E7%8E%AF%E5%A2%83/"/>
    <id>http://blog.wddog.cn/2018/03/16/阿里云ECS centos 7.3 搭建 lamp 环境/</id>
    <published>2018-03-16T08:21:29.456Z</published>
    <updated>2018-03-16T08:39:34.056Z</updated>
    
    <content type="html"><![CDATA[<p>一开始 搭建 lamp 环境还是挺让人捉急，一旦那部分错了，只能选择重装，今天我就给大家介绍一种比较简单的安装方式，亲测有效<br>(Apache2.4 + Mysql5.7 + PHP5.6)</p><hr><h2 id="LAMP安装有顺序：先安装Apache或Mysql，最后安装PHP"><a href="#LAMP安装有顺序：先安装Apache或Mysql，最后安装PHP" class="headerlink" title="LAMP安装有顺序：先安装Apache或Mysql，最后安装PHP"></a>LAMP安装有顺序：先安装Apache或Mysql，最后安装PHP</h2><h3 id="1-安装Apache"><a href="#1-安装Apache" class="headerlink" title="1.安装Apache"></a>1.安装Apache</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum -y install httpd httpd-manual mod_ssl mod_perl mod_auth_mysql</span><br><span class="line">设置开机启动apache</span><br><span class="line"></span><br><span class="line">systemctl enable httpd.service</span><br><span class="line">启动apache</span><br><span class="line"></span><br><span class="line">systemctl start httpd.service</span><br><span class="line">Apache 安装成功，虚拟主机等配置下面再说。</span><br></pre></td></tr></table></figure><h3 id="2-安装Mysql"><a href="#2-安装Mysql" class="headerlink" title="2.安装Mysql"></a>2.安装Mysql</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">安装之前先删除以前版本，以免安装不成功。</span><br><span class="line"></span><br><span class="line">查看mysql的rpm包</span><br><span class="line"></span><br><span class="line">rpm -qa | gerp mysql</span><br><span class="line">查到之后就删除</span><br><span class="line"></span><br><span class="line">yum remove 文件名（可以一次多个名字，以空格分隔）</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line"></span><br><span class="line">yum remove -y   mysql mysql mysql-server mysql-libs compat-mysql51</span><br><span class="line">查看多余文件没删干净</span><br><span class="line"></span><br><span class="line">find / -name mysql</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">删除多余文件</span><br><span class="line"></span><br><span class="line">rm -rf 文件名</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line"></span><br><span class="line">rm -rf  /etc/my.cnf</span><br><span class="line">开始安装</span><br><span class="line"></span><br><span class="line">rpm -ivh http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm</span><br><span class="line">yum install -y mysql-server</span><br><span class="line">设置开机启动Mysql</span><br><span class="line"></span><br><span class="line">systemctl enable mysqld.service</span><br><span class="line">开启服务</span><br><span class="line"></span><br><span class="line">systemctl start mysqld.service</span><br><span class="line">查看Mysql5.7默认密码</span><br><span class="line"></span><br><span class="line">grep &apos;temporary password&apos; /var/log/mysqld.log</span><br><span class="line">登陆Mysql，输入用户名root，复制粘贴密码</span><br><span class="line"></span><br><span class="line">mysql -uroot -p</span><br><span class="line">修改密码(mysql5.7的密码设置规则：大写字母、小写字母、数字、特殊字符加起来)</span><br><span class="line"></span><br><span class="line">SET PASSWORD = PASSWORD(&apos;Abc123!&apos;);</span><br><span class="line">查看数据库</span><br><span class="line"></span><br><span class="line">show databases;</span><br><span class="line">Mysql配置安装成功。</span><br></pre></td></tr></table></figure><h4 id="配置远程连接数据库-详细配置"><a href="#配置远程连接数据库-详细配置" class="headerlink" title="配置远程连接数据库( 详细配置 )"></a>配置远程连接数据库( 详细配置 )</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">创建用户</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;a123456!&apos; WITH GRANT OPTION;</span><br><span class="line"> </span><br><span class="line">（第一个root表示用户名，%表示所有的电脑都可以连接，也可以设置某个ip地址运行连接，第二个 a123456! 表示密码）。</span><br><span class="line"></span><br><span class="line">命令立即执行生效</span><br><span class="line"></span><br><span class="line">flush privileges;</span><br><span class="line">查看用户</span><br><span class="line"></span><br><span class="line">SELECT DISTINCT CONCAT(&apos;User: &apos;&apos;&apos;,user,&apos;&apos;&apos;@&apos;&apos;&apos;,host,&apos;&apos;&apos;;&apos;) AS query FROM mysql.user;</span><br><span class="line">配置成功</span><br><span class="line"></span><br><span class="line">exit;</span><br><span class="line">退出</span><br></pre></td></tr></table></figure><h3 id="3、安装PHP"><a href="#3、安装PHP" class="headerlink" title="3、安装PHP"></a>3、安装PHP</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">1.删除以前的php版本（跟上面删除mysql的命令是一样的）</span><br><span class="line"></span><br><span class="line">先查看</span><br><span class="line"></span><br><span class="line">rpm -qa | grep php</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">再删除</span><br><span class="line"></span><br><span class="line">yum remove 文件名</span><br><span class="line"></span><br><span class="line">2. 配置yum源</span><br><span class="line"></span><br><span class="line">事先确认yum源的链接是不是有效的。</span><br><span class="line"></span><br><span class="line">yum install epel-release</span><br><span class="line">rpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm</span><br><span class="line">3. 确认安装的php版本</span><br><span class="line"></span><br><span class="line">yum list --enablerepo=remi --enablerepo=remi-php56 | grep php</span><br><span class="line">4. 安装php5.6</span><br><span class="line"></span><br><span class="line">yum install --enablerepo=remi --enablerepo=remi-php56 php php-opcache php-pecl-apcu php-devel php-mbstring php-mcrypt php-mysqlnd php-phpunit-PHPUnit php-pecl-xdebug php-pecl-xhprof php-pdo php-pear php-fpm php-cli php-xml php-bcmath php-process php-gd php-common</span><br><span class="line">php-opcache及php-pecl-apcu会有效的提高php执行速度。</span><br><span class="line"></span><br><span class="line">5. 确认php版本</span><br><span class="line"></span><br><span class="line">php -v</span><br><span class="line">安装成功</span><br></pre></td></tr></table></figure><h3 id="5、最后配置Apache"><a href="#5、最后配置Apache" class="headerlink" title="5、最后配置Apache"></a>5、最后配置Apache</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">用ftp工具下载/etc/httpd/conf/httpd.conf到windows,用文本编辑工具打开</span><br><span class="line"></span><br><span class="line">1.# LoadModule foo_module modules/mod_foo.so //这句前面的#号不要去掉，否则apache重启动不了</span><br><span class="line"></span><br><span class="line">LoadModule rewrite_module modules/mod_rewrite.so</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">如果有mod_rewrite.so这句，就把这句前面的#号去掉；如果没有mod_rewrite.so这句，就在mod_foo.so这句后面加上这句；反正就是开启mod_rewrite.so这个服务</span><br><span class="line"></span><br><span class="line">2.把AllowOverride None改成AllowOverride All</span><br><span class="line"></span><br><span class="line">3.配置虚拟主机，把下面这段加在/etc/httpd/conf/httpd.conf最后面，注意去掉注释</span><br><span class="line"></span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">ServerAdmin suibian@sina.com                //随便哪个邮箱</span><br><span class="line">DocumentRoot &quot;/var/www/html/laravel5.2/public&quot;   //项目的访问路径</span><br><span class="line">ServerName www.aliyun.com                  //域名，绑定这台服务器的IP</span><br><span class="line">DirectoryIndex index.php index.html index.htm    //访问网站时默认打开的文件</span><br><span class="line">ErrorLog &quot;logs/www.aliyun.com-error_log&quot;       //日志</span><br><span class="line">CustomLog &quot;logs/www.aliyun.com-access_log&quot; common //日志</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><h3 id="6、重启Apache"><a href="#6、重启Apache" class="headerlink" title="6、重启Apache"></a>6、重启Apache</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart httpd.service</span><br></pre></td></tr></table></figure><p><strong>ps: 搭建 vsftpd 的方法我会在后面的文章中放出来(放心比这更简单)</strong></p>]]></content>
    
    <summary type="html">
    
      simple
    
    </summary>
    
      <category term="Linux" scheme="http://blog.wddog.cn/categories/Linux/"/>
    
    
      <category term="centos7.3" scheme="http://blog.wddog.cn/tags/centos7-3/"/>
    
      <category term="阿里云" scheme="http://blog.wddog.cn/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="lamp" scheme="http://blog.wddog.cn/tags/lamp/"/>
    
  </entry>
  
  <entry>
    <title>关于网站多语言的一些实现方案(复制文章)</title>
    <link href="http://blog.wddog.cn/2018/03/10/%E7%BD%91%E7%AB%99%E5%A4%9A%E8%AF%AD%E8%A8%80%E7%A0%94%E7%A9%B6%E6%8E%A2%E8%AE%A8%E6%96%B9%E6%A1%88/"/>
    <id>http://blog.wddog.cn/2018/03/10/网站多语言研究探讨方案/</id>
    <published>2018-03-09T16:02:53.959Z</published>
    <updated>2018-03-09T16:14:44.522Z</updated>
    
    <content type="html"><![CDATA[<p>由于全球化的推进，多语言网站开始流行起来，未来的网站可能至少会有双语（中文/英语），对于多语言网站，我给出如下几种方案，希望想要制作多语言网站的人能够从中找到适合自己的。</p><p>出处: <a href="http://www.ytmp.net/forum.php?mod=viewthread&amp;tid=245&amp;extra=page%3D3" target="_blank" rel="noopener">http://www.ytmp.net/forum.php?mod=viewthread&amp;tid=245&amp;extra=page%3D3</a></p><h3 id="方案一：引入谷歌翻译器"><a href="#方案一：引入谷歌翻译器" class="headerlink" title="方案一：引入谷歌翻译器"></a>方案一：引入谷歌翻译器</h3><p><strong> 此方案博主早先试过了，翻译成英语还行，其他基本看不懂了，要求不是很高的可以试试，还是挺不错了</strong></p><p>谷歌翻译推出了一个在线翻译网站的神器，你可以通过接入谷歌翻译器来实现多语言网站。<br>但是，目前谷歌被墙，所以此方案可能暂时无法实现，未来谷歌回归中国，还是可以使用此方案的。<br>推荐指数：❤❤❤</p><h3 id="方案二：动态设置模板"><a href="#方案二：动态设置模板" class="headerlink" title="方案二：动态设置模板"></a>方案二：动态设置模板</h3><p>即网站使用模板可以动态设置，制作网站的时候，同时制作多个语言版本的模板，栏目和文章都定制（一个中文，一个英文）。原系统模板只能后台设置使用的模板，也就是写入配置文件中，我个人觉得不要修改配置文件为好，所以为了安全，将模板读取修改为读取数据库的数据，这样就可以安全多了。<br>缺点：工作量比较大。<br>推荐指数：❤❤❤❤</p><h3 id="方案三：制作多语言插件（参考wordpress本地化设计）"><a href="#方案三：制作多语言插件（参考wordpress本地化设计）" class="headerlink" title="方案三：制作多语言插件（参考wordpress本地化设计）"></a>方案三：制作多语言插件（参考wordpress本地化设计）</h3><p>这个难度有点大，不过应该是最理想的实现多语言网站的方法。<br>自定义一个翻译方法，比如：_lang()<br>此方法用于翻译文字，将数据传入_lang方法里面，此方法读取语言包，如果有对应语言包，那么将翻译成对应的语言，如果没有则返回字符串。<br>语言包制作：键值对的形式，首选读取网站所有的文字数据，然后对应进行人工翻译，可制作多种语言包，进行相应设定，_lang方法将读取语言包里对应的翻译语言，这样就实现多语言版本。（说起来比较抽象，下面给出个例子）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">模板页面中：&#123;fun _lang(<span class="string">'世界你好 &lt;--&gt; hello world！'</span>)&#125;<span class="comment">//注：doyo中使用_lang方法</span></span><br><span class="line">Functions.php中：</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_lang</span><span class="params">($word)</span></span>&#123;</span><br><span class="line">      <span class="comment">//制作一个表，读取表中设定的语言字段，此字段可以前台传入数据进行修改</span></span><br><span class="line">      $lang=DB(<span class="string">'language'</span>)-&gt;select(xxxxx);<span class="comment">//读取当前模板使用的语言</span></span><br><span class="line">      $lanlist=<span class="keyword">require</span>(xxx);<span class="comment">//引入多语言包，键值对的文件，可以是return array($word=&gt;'bbb');</span></span><br><span class="line">      <span class="keyword">if</span>($lanlist[$word])&#123;</span><br><span class="line">          <span class="keyword">return</span> $lanlist[$word]; </span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="keyword">return</span> $word;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>语言包文件：language.php<br>return array(‘aa’=&gt;’xxx’,’bb’=&gt;’sada’….);//此为举例，语言包可以制作成其它的，看个人喜好。<br>多语言包插件制作就介绍到这里，其中有许多简略部分，因为我也没有制作~<br>推荐指数：❤❤❤</p><p>以上，希望对各位有所帮助~</p>]]></content>
    
    <summary type="html">
    
      simple
    
    </summary>
    
      <category term="PHP" scheme="http://blog.wddog.cn/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://blog.wddog.cn/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>关于 PHP 无限极分类</title>
    <link href="http://blog.wddog.cn/2018/03/09/PHP%E6%97%A0%E9%99%90%E6%9E%81%E5%88%86%E7%B1%BB/"/>
    <id>http://blog.wddog.cn/2018/03/09/PHP无限极分类/</id>
    <published>2018-03-09T15:46:32.811Z</published>
    <updated>2018-03-09T15:53:00.667Z</updated>
    
    <content type="html"><![CDATA[<p>废话不多说直接放代码 —&gt; 反正不我写的 (勿喷！大佬代码，谁逼 ，直接打死)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 验证字符长度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $str 字符串</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $min 最小</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $max 最大</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 小黄牛</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@email</span> 1731223728@163.com</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">strLength</span><span class="params">($str,$min,$max)</span></span>&#123;</span><br><span class="line">    $length = strlen($str);</span><br><span class="line">    <span class="keyword">if</span>($length &gt;= $min &amp;&amp; $length &lt;= $max)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 无限递归下拉选择框</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $data   数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $pid    父id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $t  循环次数：作用缩进</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $selected 选中的下标</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 小黄牛</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@email</span> 1731223728@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2015-10-22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">html_options</span><span class="params">($data=array<span class="params">()</span>, $pid=<span class="number">0</span>, $t=<span class="number">-1</span>, $selected=<span class="number">0</span>)</span></span>&#123;</span><br><span class="line">    $html_options = <span class="string">''</span>;</span><br><span class="line">    $t++;</span><br><span class="line">    $nbspstr = str_repeat(<span class="string">'&amp;nbsp;'</span>, $t * <span class="number">4</span>);</span><br><span class="line">    <span class="keyword">if</span> ($data) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> ($data <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">            <span class="keyword">if</span>($pid == $v[<span class="string">'pid'</span>])&#123;</span><br><span class="line">                <span class="comment">// 判断是否是最后一个下拉选项卡</span></span><br><span class="line">                $symbol_str = (count($data) == ($k+<span class="number">1</span>)) ? <span class="string">'┗'</span> : <span class="string">'┣'</span>;</span><br><span class="line">                <span class="comment">// 判断是否选中</span></span><br><span class="line">                $selected_str = ($selected == $v[<span class="string">'id'</span>]) ? <span class="string">' selected="selected"'</span> : <span class="string">''</span>;</span><br><span class="line">                <span class="comment">// 下拉选择框数据</span></span><br><span class="line">                $html_options .= <span class="string">'&lt;option value="'</span> . $v[<span class="string">'id'</span>] . <span class="string">'" '</span>.$selected_str.<span class="string">'&gt;'</span> . $nbspstr . $symbol_str . $v[<span class="string">'name'</span>] . <span class="string">'&lt;/option&gt;'</span>;</span><br><span class="line">                <span class="comment">// 无限循环查找子集</span></span><br><span class="line">                $html_options .= html_options($data, $v[<span class="string">'id'</span>], $t, $selected);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $html_options;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 无限分类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $array</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $pid</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tree</span><span class="params">($array, $pid = <span class="number">0</span>)</span></span>&#123;</span><br><span class="line">    $arr = <span class="keyword">array</span>();</span><br><span class="line">    $tem = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">foreach</span> ($array <span class="keyword">as</span> $v) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($v[<span class="string">'pid'</span>] == $pid) &#123;</span><br><span class="line">            $tem = tree($array, $v[<span class="string">'id'</span>]);</span><br><span class="line">            <span class="comment">//判断是否存在子数组</span></span><br><span class="line">            $tem &amp;&amp; $v[<span class="string">'child'</span>] = $tem;</span><br><span class="line">            $arr[] = $v;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 二维数组递归</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $arr</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 小黄牛</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@email</span> 1731223728@163.com</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">category</span><span class="params">($arr = array<span class="params">()</span>)</span></span>&#123;</span><br><span class="line">    $info = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">if</span>(count($arr) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">foreach</span>($arr <span class="keyword">as</span> $k =&gt; $vo)&#123;</span><br><span class="line">            <span class="keyword">if</span>($vo[<span class="string">'pid'</span>] == <span class="number">0</span> )&#123;</span><br><span class="line">                <span class="keyword">foreach</span>($arr <span class="keyword">as</span> $v)&#123;</span><br><span class="line">                    <span class="keyword">if</span>($v[<span class="string">'pid'</span>] == $vo[<span class="string">'id'</span>])&#123;</span><br><span class="line">                        $vo[<span class="string">'children'</span>][] = $v;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                $info[] = $vo;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $info;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 无限递归</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $data   数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $pid    父id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $t  循环次数：作用缩进</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 小黄牛</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@email</span> 1731223728@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2015-10-22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">html_options</span><span class="params">($data=array<span class="params">()</span>, $pid=<span class="number">0</span>, $t=<span class="number">-1</span>, &amp;$arr)</span></span>&#123;</span><br><span class="line">    $html_options = <span class="string">''</span>;</span><br><span class="line">    $t++;</span><br><span class="line">    $nbspstr = str_repeat(<span class="string">'&amp;nbsp;'</span>, $t * <span class="number">4</span>);</span><br><span class="line">    <span class="keyword">if</span> ($data) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> ($data <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">            <span class="keyword">if</span>($pid == $v[<span class="string">'st_pid'</span>])&#123;</span><br><span class="line">                <span class="comment">// 判断是否是最后一个下拉选项卡</span></span><br><span class="line">                $symbol_str = (count($data) == ($k+<span class="number">1</span>)) ? <span class="string">'└'</span> : <span class="string">'├'</span>;</span><br><span class="line">                <span class="comment">// 数据</span></span><br><span class="line">                $v[<span class="string">'st_name'</span>] = $nbspstr . $symbol_str . $v[<span class="string">'st_name'</span>];</span><br><span class="line">                $arr[] = $v;</span><br><span class="line">                <span class="comment">// 无限循环查找子集</span></span><br><span class="line">                <span class="keyword">$this</span>-&gt;html_options($data, $v[<span class="string">'st_id'</span>], $t, $arr);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>结尾语： 弱弱问一句， 你们发现哪些 是我写的了吗， 对不起，我还是个孩子</em></p>]]></content>
    
    <summary type="html">
    
      simple
    
    </summary>
    
      <category term="PHP" scheme="http://blog.wddog.cn/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://blog.wddog.cn/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>据 PHPExcel 封装的一个快捷函数,解决输出 Excel 代码的重复</title>
    <link href="http://blog.wddog.cn/2018/03/09/phpexcel%20%E5%BF%AB%E6%8D%B7%E5%87%BD%E6%95%B0/"/>
    <id>http://blog.wddog.cn/2018/03/09/phpexcel 快捷函数/</id>
    <published>2018-03-09T15:35:55.920Z</published>
    <updated>2018-03-09T15:45:13.841Z</updated>
    
    <content type="html"><![CDATA[<p>关于 phpexcel 数据写入的一层封装 使数据写入更加简便<br>使用方法如下 tp5 中 把函数放入公共函数 引入 phpexcel 类即可<br>使用极其简单</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 此函数依赖 PHPExcel 使用方法可参考 admin\controller\CustomerController.php-&gt;outputExcel </span></span><br><span class="line"><span class="comment"> * 快捷方法 添加excel 数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> PHPExcel $phpexcelObj 对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> Array $title 表格 列字段名 必需</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> Array $data 表格数据 必须按照 标题位置存放 必需</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Object $objSheet # 数据对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">exceloutput</span><span class="params">( $phpexcelObj,$title=array<span class="params">()</span>, $data=array<span class="params">()</span>)</span></span>&#123;</span><br><span class="line">     <span class="keyword">if</span>( !$phpexcelObj &amp;&amp; !<span class="keyword">empty</span>($title) &amp;&amp; !<span class="keyword">empty</span>($data) )&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="comment"># 加载扩展库 extend/phpexcel/PHPExcel.php</span></span><br><span class="line">     $phpexcel = $phpexcelObj;    <span class="comment">// 实例化等同与新建一个excel 文件</span></span><br><span class="line">     $objSheet = $phpexcel-&gt;getActiveSheet(); <span class="comment">// 获取当前活动的 sheet 工作区</span></span><br><span class="line">     $objSheet-&gt;setTitle(<span class="string">'demo'</span>); <span class="comment">// 给当前活动的 sheet 设置名称</span></span><br><span class="line">     $column_names = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>, <span class="string">'G'</span>, <span class="string">'H'</span>, <span class="string">'I'</span>, <span class="string">'J'</span>, <span class="string">'K'</span>, <span class="string">'L'</span>, <span class="string">'M'</span>, <span class="string">'N'</span>, <span class="string">'O'</span>, <span class="string">'P'</span>, <span class="string">'Q'</span>, <span class="string">'R'</span>, <span class="string">'S'</span>,<span class="string">'T'</span>, <span class="string">'U'</span>, <span class="string">'V'</span>, <span class="string">'W'</span>, <span class="string">'X'</span>, <span class="string">'Y'</span>, <span class="string">'Z'</span>];</span><br><span class="line"></span><br><span class="line">     $curC = <span class="number">-1</span>; <span class="comment"># 列表位置 A-Z AA AB ... BA BB...</span></span><br><span class="line">     $strColumn  = <span class="string">''</span>; <span class="comment"># 要拼接的字符 通过 $curC</span></span><br><span class="line">     <span class="keyword">for</span>( $i=<span class="number">0</span>; $i&lt;count($title); $i++ )&#123;</span><br><span class="line">         <span class="keyword">if</span>( $i&lt;count($column_names) )&#123; <span class="comment"># 当列小于 数组长度时</span></span><br><span class="line">             $strColumn = $column_names[$i].<span class="string">"1"</span>; <span class="comment"># 列 A1 B1 C1 ...</span></span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;                                </span><br><span class="line">             <span class="keyword">if</span>((($i+<span class="number">1</span>)%count($column_names)) == <span class="number">1</span>)&#123; <span class="comment"># 当前 使用列 每循环一次列就 选择 下一个作为 开头 AA AB AC... BA BB BC...</span></span><br><span class="line">                 $curC++;</span><br><span class="line">             &#125;</span><br><span class="line">             $strColumn = $column_names[$curC].$column_names[$i%count($column_names)].<span class="string">"1"</span>; <span class="comment"># 大于 26 个字母后的列 拼接</span></span><br><span class="line">         &#125;</span><br><span class="line">         $objSheet-&gt;setcellValue($strColumn,$title[$i]); <span class="comment"># 设置 标题</span></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     $j = <span class="number">2</span>; <span class="comment"># 当前行</span></span><br><span class="line">     <span class="comment"># 写入内容</span></span><br><span class="line">     <span class="keyword">foreach</span>( $data <span class="keyword">as</span> $val )&#123;</span><br><span class="line">         $curC = <span class="number">-1</span>; <span class="comment"># 列表位置 A-Z AA AB ... BA BB...</span></span><br><span class="line">         $strColumn  = <span class="string">''</span>; <span class="comment"># 要拼接的字符 通过 $curC</span></span><br><span class="line">         </span><br><span class="line">         <span class="keyword">for</span>( $i=<span class="number">0</span>; $i&lt;count($title); $i++ )&#123;</span><br><span class="line">             <span class="keyword">if</span>( $i&lt;count($column_names) )&#123; <span class="comment"># 当列小于 数组长度时</span></span><br><span class="line">                 $strColumn = $column_names[$i].$j; <span class="comment"># 列</span></span><br><span class="line">             &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                 <span class="keyword">if</span>((($i+<span class="number">1</span>)%count($column_names)) == <span class="number">1</span>)&#123; <span class="comment"># 当前 使用列 每循环一次列就 选择 下一个作为 开头 AA AB AC... BA BB BC...</span></span><br><span class="line">                     $curC++;</span><br><span class="line">                 &#125;</span><br><span class="line">                 $strColumn = $column_names[$curC].$column_names[$i%count($column_names)].$j; <span class="comment"># 大于 26 个字母后的列 拼接</span></span><br><span class="line">             &#125;</span><br><span class="line">             $objSheet-&gt;setcellValue($strColumn,$val[$title[$i]]); <span class="comment"># 设置 标题</span></span><br><span class="line">         &#125;</span><br><span class="line">         $j++; <span class="comment"># 移到下一行</span></span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> $phpexcelObj;        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>在控制器方法中调用以下代码 数据 根据具体业务查询</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询所有列名</span></span><br><span class="line">$columns    = Db::query(<span class="string">"select column_name from information_schema.columns where table_name='"</span>.config(<span class="string">'database.prefix'</span>).<span class="string">"customer'"</span>);</span><br><span class="line">$data       = Db::table(config(<span class="string">'database.prefix'</span>).<span class="string">"customer"</span>)-&gt;select(); <span class="comment"># 查询所有数据</span></span><br><span class="line">$title      = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">foreach</span>( $columns <span class="keyword">as</span> $column )&#123; <span class="comment"># 列名格式化成数组</span></span><br><span class="line">    $title[] = $column[<span class="string">'column_name'</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// dump($title);</span></span><br><span class="line"><span class="comment">// dump($data);</span></span><br><span class="line">Loader::import(<span class="string">'phpexcel.PHPExcel'</span>); <span class="comment"># 加载扩展库 extend/phpexcel/PHPExcel.php</span></span><br><span class="line">$PHPExcel = <span class="keyword">new</span> \PHPExcel();</span><br><span class="line">$phpexcelObj = exceloutput( $PHPExcel,$title, $data); <span class="comment"># 使用 函数添加数据 返回工作区数据对象</span></span><br><span class="line">$PHPWriter = \PHPExcel_IOFactory::createWriter($phpexcelObj,<span class="string">"Excel2007"</span>); <span class="comment"># 写入数据</span></span><br><span class="line">header(<span class="string">'Content-Disposition: attachment;filename="表单数据.xlsx"'</span>); <span class="comment"># 告知浏览器输出文件 文件吗 为 表单数据</span></span><br><span class="line">header(<span class="string">'Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'</span>); <span class="comment"># 输出格式</span></span><br><span class="line">$PHPWriter-&gt;save(<span class="string">"php://output"</span>); <span class="comment">//表示在$path路径下面生成demo.xlsx文件</span></span><br></pre></td></tr></table></figure><p>结尾语： 因技术有限，东西是很龊的，但是，多少还是能用的 —&gt; 想批评我，没门</p>]]></content>
    
    <summary type="html">
    
      simple
    
    </summary>
    
      <category term="PHP" scheme="http://blog.wddog.cn/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://blog.wddog.cn/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Redis 随笔</title>
    <link href="http://blog.wddog.cn/2018/03/09/Redis/"/>
    <id>http://blog.wddog.cn/2018/03/09/Redis/</id>
    <published>2018-03-09T15:22:43.288Z</published>
    <updated>2018-03-09T15:34:39.305Z</updated>
    
    <content type="html"><![CDATA[<p>选择目录启动命令： redis-server.exe redis.windows.conf  redis-cli.exe -h 127.0.0.1 -p 6379</p><p>redis 可用来存储字符串，哈希结构，链表，集合，常用来提供数据结构服务</p><p>redis 和 memcached 的一些独特之处</p><ol><li>redis 可以用来做存储，而 memcached 只是 用来做缓存 主要因为 redis 具有持久化的功能</li><li>存储的数据有结构， 对于 memcached 来说，存储的数据，只有一种类型–字符串，而 redis 则可以存储字符串，链表，哈希，集合，有序集合</li></ol><p>+++++++++++++++++++++++++++通用类型操作+++++++++++++++++++++++++++++++++++++++++<br>set 设置值 格式： set key value<br>get 获取值 get key<br>查询， keys <em> keys s</em> keys key   还可使用 ？ * [] 找出键值</p><p>Randomkey 返回随机的一个 key<br>Exists key 判断 key 是否存在<br>type key 判断 key 类型<br>del key 删除一个 key<br>rename key new key给 key 改名<br>renamenx key new key  使用这个命令改成一个已存在的名字时将不会进行 改名</p><p>redis 向我们提供了 16 个库 使用 select 0~15<br>move key 1 移动这个键值对到 1 号数据库<br>redis 默认是无生命周期的 -1 不存的也返回 -1  永久有效<br>ttl key 查询生命周期 返回过期的秒数 已过期， 永久有效的都返回-1 2.8 后 不存在的返回-2<br>expire key 以秒数来设置生命周期  pexpire以毫秒为单位 ptti 一毫秒为单位返回生命周期<br>persist key 把他变为永久有效</p><p>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><p>============================数据格式的操作======================================<br>String： 字符串:</p><p>在设置时，直接指定过期时间：<br>set key value ex 秒数 px 毫秒 [nx] 【xx】<br>注：ex,px 不能同时写，否则以后面有效期为准<br>nx 当key 不存在时执行<br>xx 存在时执行<br>一次设置多个值：<br>mset multi set<br>格式： mset a 1 b 2 c 3</p><p>mget key1 key2  一次获取多个键值</p><p>setrange key # 要替换的值</p><p>append key value 往值后面添加<br>getrange key start stop  // 获取值得一小部分</p><p>getset 获取旧值并设置新值</p><p>用在秒杀资格<br>incr  key 将值加一<br>decr  key 将值减一</p><p>incrby key 5.. 可设置每次增加多少<br>decrby key 5..</p><p>incrbyfloat key 0.5 浮点数增加</p><h1 id="在-位-上做操作"><a href="#在-位-上做操作" class="headerlink" title="在 位 上做操作"></a>在 位 上做操作</h1><p>A ASCLL  65 0100 0001<br>a ASCLL  97 0110 0001<br>setbit:<br>格式： setbit key 偏移量 1|0   offset(偏移量) 512MB  值为 2^32-1 </p><p>flushdb // 清楚所有数据</p><hr><p>link（list）  :  链表操作：</p><p>单链表 ， 双向链表， 循环链表<br>key: 都是一个<br>lpush : 格式 lpush key value 加入到链表头部（l|left 左边）<br>rpush ：格式 rpush key value 加入到链表尾部（r|reft 右边）</p><p>rpop  : 格式：rpop key 从链表尾部弹出（删除）一个值<br>lpop  : 格式：lpop key 从链表首（左）部弹出（删除）一个值</p><p>lrange: (linkrange) //范围取值，查看链表值<br>    格式： lrange key 0 2  (从0开始取出第一个)</p><p>lrem : lrem key count value  lrem name (2) xiaoming  删除几个 整数从左开始 -数从右边开始</p><p>ltrim: ltrim key 2 5 截取一段 在获取一次，截取在重新赋值给key<br>lindex: lindex key # 去除第几个，下标从 0 开始<br>llen： llen key 获取长度</p><p>linsert : linsert key after|before search value沿着链表找到某个值，在前|后 插入值</p><p>rpoplpush : rpoplpush key1 key2右边弹出，左边插入一个  一个链表右边的移到另一个链表的左边 </p><p>brpop,blpop:</p><p>brpop blpop key timeout(时间为秒)  等待 pop  (使用场景ajax长轮询时)</p><hr><p>（国外大型网站使用）</p><p>位图法统计活跃用户：</p><p> 1亿用户，活跃用户非活跃用户，如何记录用户的登陆信息，如何查询活跃用户，比如一周内登陆三次的</p><p> 使用redis高效解决： 使用 位 1亿个位登陆的置于 1 反之 0</p><p> 假设只有 7 个用户 uid 分别位 1,2,3,4,5,6,7</p><p> 周一 0 1 0 1 0 0 0 1  //首位为0 代表正数 这里记录一天的登陆的情况<br> 周二 0 1 1 1 0 0 1 1<br> 周三 0 1 1 1 0 1 0 1<br> 周四 0 1 0 1 1 0 0 1</p><p> 统计： 连续登录的就做 and 操作 10000001 利用 redis 的 setbit 操作</p><p> 星期一：<br> setbit mon 100000000 0<br> setbit mon 3 1 谁登陆把谁置为1</p><p> 星期二：<br> set thur 1000000000 0<br> set thur 2  1</p><p> bitop: and or xor not (逻辑并，逻辑或，逻辑异或，逻辑非);<br> 格式为： bitop and destkey key [key …] 将结果保存在 destkey 中</p><p> 做一个 and 运算得到1 就代表连续登陆一周</p><p> 优点： </p><ol><li>节约空间，一亿人每天的登陆情况，用一亿 bit 约 1200Wbyte 约 10M 的字符就能表示</li><li><p>计算快</p><p>=================</p></li></ol><p>set（集合） 结构： </p><p>特点：</p><ol><li>无序性，｛1,2｝=={2,1}</li><li>唯一性 独一无二</li><li>确定性</li></ol><p>sadd key value1 value2<br>往集合内添加元素</p><p>srem key value1 value2<br>删除集合中value1 value2的元素，返回值，除去不存在的值后，返回删除的个数</p><p>srandmember key<br>返回集合key 中的任意一个元素</p><p>spop key<br>返回并且删除集合中随意的一个元素</p><p>smembers key<br>返回集合中的所有元素</p><p>sismember key value<br>判断 value 是否在 key 集合中， 存在为 1  反之 0</p><p>smove source dest value<br>把source 集合中的 value 删除 并 添加到 dest 集合中</p><p>scard key<br>返回集合中元素的个数</p><p>sinter key1 key2 key3<br>求出 key1 key2 key3 中的交集，并返回</p><p>sinterstore dest key1 key2 key3<br>求出 key1 key2 key3 中的交集，并返回给dest</p><p>sunion key1 key2…<br>求出 key1 key2 key..的并集并返回</p><p>sdiff key1 key 2 key ..<br>求出他们的差集 </p><hr><p>有序集合： order set：</p><p>score(序) 声明时定义 score  确定其序</p><p>zadd score1 value1 score2 value2<br>添加元素</p><p>zrem key value1 value2<br>删除元素<br>zremrangebyscore key min max<br>按照 score 来删除元素 删除 min 与 max 之间的<br>zremrangbyrank key start end<br>按排名删除元素删除名次在 start  与 end 之间的</p><p>zrank key member<br>查看 member 的排名（升序）<br>zrevrank key member<br>查看 member 的排名（降序）</p><p>zrange key start stop<br>查询排序后第start 名到第stop名 的zrange key 1 3 withscores 另外在取出score </p><p>zrangebyscore key score1 score2<br>取出 score1 和 score2 之间的值 zrangebyscore key score1 score2  limit 1 2 跳过第一个在取出两个</p><p>zcard key<br>返回元素个数</p><p>zcount key min max<br>返回min max 之间的元素个数</p><p>(zinsterstore) destination numkeys key1[key2…]                    zunionstore(并集)<br>weights wight [weight..]  // 权重 我的一块顶你五块<br>aggregate sum|min|max<br>求key1 key2的交集， key1 key2的权重分别是weight1 weight2<br>聚合方法使用：sum min max<br>聚合结果保存在dest 集合中</p><hr><p>哈希： hash （相当于php的关联数组合）</p><p>hset : hset key field value<br>设置<br>(关联数组)<br>field value<br>name  lisi<br>age   20<br>height 174</p><p>hmset:<br>hmset key field value name  lisi<br>一次设置多个</p><p>hgetall:<br>hgetall key<br>获取键中所有元素</p><p>hget:<br>hget key name<br>一次获取一个</p><p>hmget：<br>hmget key name field　<br>一次获取多个</p><p>hdel：<br>hdel key name<br>删除一个</p><p>hlen:<br>hlen key<br>有几个域（键）</p><p>hexists：<br>hexists key name<br>name是否存在</p><p>hincrby:<br>hincby key field value<br>增长一个<br>hincrbyfloat:<br>hkeys：</p><hr><p>事务及锁：<br>mysql :启用事务： start transaction<br>                rollback 回滚</p><p>redis 事务： 不支持回滚，命令执行了就执行了</p><p>开启： multi (多)  之后的命令都放到待执行队列中<br>exec： 运行提交<br>输入错误的命令后 队列中的命令就都不能执行，<br>如果命令正确，类型不正确，将跳过那条语句，执行其他的<br>discard 清空执行队列中命令</p><p>监视：</p><p>悲观锁操作时上锁，只有我能操作</p><p>乐观锁 注意有没有更改值，有就不执行   (秒杀)<br>watch key 监视着这个值<br>unwatch 取消所有监视的 key</p><hr><p>(适合做在线聊天，消息推送）群聊广告<br>消息发布，订阅：<br>声明一个频道<br>订阅新闻频道<br>发布新闻内容</p><p>publish news “today is xxx”  创建一个频道news 发布<br>subscribe news  收听频道news</p><p>psubscribe 可以通配 news* 的全部监听 （以模式一次匹配多个频道）</p><p>pubsub 2.8.0 列出当前活动的频道 发布端 收听端口 查看当前活动频道，发布者，监听者</p><p>+++++++++++++++++++++++=============<br>redis两种持久化： rdb aof 可同时存在<br>rdb快照持久化：</p><p>把数据存储于断电后不会丢失的设备中，通常是硬盘<br>常见的持久化方式：</p><p>主从：通过从服务器保存和持久化，mongodb的replication sets配置<br>日志：操作生成相关日志，并通过日志来回复数据<br>couchdb对于数据内容，不修改,只追加，则文件本身就是日志，不会丢失数据</p><p>rdb工作原理：<br>每隔 N 分钟或 N 次写操作后，从内存 dump 数据形成 rdb 文件，压缩，放在备份目录 参数配置（时间|次数、压缩、目录）</p><p>rdb 快照相关参数：</p><p>save 900 1 ！刷新快照到硬盘中，必须满足两者要求才会触发，即 900 秒后至少 1 个关键字发生变化<br>save 300 10 ! 必须是 300 秒后 至少 10 个关键字发生变化<br>save 60 10000 ! 必须是 60 秒后，至少 10000 个关键字发生变化<br>stop-writes-on-bgsave-error yes ! 后台存储错误停止写<br>rdbcompression yes ! 使用 LZF 压缩 rdb 文件<br>rdnchecksum yes ! 存储和加载 rdb 文件时校验<br>dbfilename dump.rdb ! 设置 rdb  文件名<br>dir ./ ! 设置工作目录，rdb 文件会写入该目录</p><p>redis-benchmark 测试性能 （crud）<br>-n 10000 (执行 10000 条命令)<br>-hlep -h 帮助</p><hr><p>aof:<br>set<br>append -》 redis 主进程 -》 后台日志程序<br>                                        -》 aof 文件</p><p>配置文件：</p><p>appendonly no|yes 是否打开 aof 日志功能<br>appendfsync always 每一个命令，都立即同步到 aof 安全速度慢<br>appendfsync everysec 折中方法，每秒写一次<br>appendfsync no 写入工作交给操作系统，由操作系统判断缓冲区大小，统一写入到 aof 同步效率低，速度快</p><p>no-appendfsync-no-rewrite yes 正在导出 rdb 快照时的过程中，要不要停止 aof<br><em>auto-aof-rewrite-percentage 100  aof 文件大小比起上次重写时的大小，增长 100% 时重写</em>auto-aof-rewrite-min-size 64mb aof 文件，至少超过64MB时，重写</p><p>注： 在dump rdb 过程中，aof 停止同步，会丢失吗？<br>不会，所有操作的缓存在队列里，dump 完成后，统一操作</p><p>注：如果 rdb 文件 aof 文件都存在，优先用谁来恢复数据<br>aof</p><p>注：两者是否可以同时用<br>可以，而且推荐这么用</p><p>注：恢复时 rdb aof 那个恢复时间快<br>rdb 因为其是数据的映射，直接载入到内存，而 aof 是命令，需要逐条运行</p><p>当一个值 100 次 incr 将产生  100 次记录， 下次恢复时从1次开始， 如何把它 直接到 100 次<br>在某个瞬间逆化成命令 incr age 100次　set age 100<br>注：aof 重写？<br>aof 重写是把内存中的数据逆化成命令，写入 aof 日志里，以解决 aof 日志过大问题<br>*（标识，真实文件中不存在）的配置文件 到了这个大小获取最终值，整个 aof  大小将减小<br>bgrewriteaof 命令重写</p><p>+++++++++++++++++===========================</p><p>redis 服务器端命令：</p><p>time 服务器时间<br>dbsize 当前数据库 key 的数量</p><p>++++++++++++=================================</p><p>redis 主从配置： 服务器集群<br>集群的作用：</p><ol><li>主从备份，防止主机宕机</li><li>读写分离，分担 master 的任务</li><li>任务分离，如从服分别分担备份工作与计算工作</li></ol><p>两种方式： 环形，线形<br>线形的好处 ，直接切换到 slave1 不需要在链接 slave2 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    sync[自动]   </span><br><span class="line">   &lt;----------------   </span><br><span class="line">         dump 出rdb            </span><br><span class="line">master     ----------------&gt;        slave  </span><br><span class="line">        缓冲的aof         </span><br><span class="line">           ----------------&gt;      </span><br><span class="line">                                   </span><br><span class="line">      replicationFeedSlaves    </span><br><span class="line">  ----------------&gt;</span><br></pre></td></tr></table></figure><p>: slave 连接到master 然后自动告知 同步（sync）一下，回送 数据映射的rdb 文件 ，在传rdb文件时，同时缓存的命令在 aof 中, 再同步到 slave<br>一个进程保持联系</p><p>集群配置：</p><ol><li>关闭 rdb 快照 (把备份工作交给 salve)</li><li>可以开启 aof </li></ol><p>salve 设置：</p><ol><li>声明 salve-of</li><li>配置密码[如果master有密码]</li><li>[某一个]salve 打开 rdb 快照功能</li><li>配置是否只读 [salve-read-only]</li></ol><p>复制配置文件<br>修改配置文件： redis6380.conf  redis6381.conf 修改其中的 pidfile /..为redis63<del>.pid    port: 为63</del><br>设置slave : 打开slaveof 添加ip 和端口 ：本地的话使用 127.0.0.1<br>是否只读 salve-read-only no|yes<br>只其中一个开启 rdb 快照，其余关闭</p><p>启动从服务器 redis-server redis6380.conf</p><p>redis-cli -p 6380 连接6380端口<br>添加密码： requirepass 密码<br>进入后使用 auth 密码<br>设置密码后，从服务器必须有密码才能连接到主服务器<br>masterauth 密码</p><p>主从复制缺陷：</p><p>每次slave断开后(无论是主动的还是网络故障)再连接 master<br>都要 master 全部 dump 出来 rdb 再 aof 即同步的过程都要重新执行一遍<br>所以记住，多来 slave 不要一下全部启动，否则 master 可能 IO剧增 </p><hr><p>运维常用命令：</p><p>time: 返回两个值 一个命令执行时的时间戳，一个执行完毕后过去多少微秒<br>dbsize : 当前库中 有多少 key<br>bgrewriteaof: 后台进程重写 aof<br>bgsave: 后台保存 rdb 快照<br>save: 保存 rdb 快照<br>lastsave: 上次保存时间 返回时间戳<br>slaveof: 设为 slave  服务器<br>flushall: 清空所有 DB<br>flushdb: 清空当前 DB<br>shutdown: save|nosave 断开连接，关闭服务器<br>slowlog: 显示慢查询<br>info: 显示服务器信息<br>config get: 获取配置信息<br>config set: 设置配置信息<br>monitor: 打开控制台<br>sync: 主从同步<br>client list: 客户端列表<br>client kill 关闭某个客户端<br>client setname 为某个客户端设置名字<br>client getname 获取客户端名字</p><p>慢日志：  slowlog</p><p>多慢才叫慢<br>由slowlog-log-slower-than 10000 来指定，单位微妙</p><p>服务器存储多少条慢查询的记录：</p><p>slowlog-max-len 128 来做限制<br>slowlog get N 获取慢日志</p><p>===================================</p><p>aof 恢复 与 rdb 服务器迁移</p><p>当不小心 flushdb、 flushall时，立即shudowm nosave(这条任务不要写到aof文件中),防止其他访问，导致aof重写，到aof文件中删除这条命令<br>redis-check-dump 检查rdb文件是否存在错误<br>（重）在 redis 进程运行时，rdb 处于打开状态，这时因为占据同样的句柄，rdb 不可用</p><hr><p>sentinel 运维监控（官方自带的）</p><p>手动操作： config get 选项</p><p>config set 选项</p><p>运行时：更改 master-slave<br>修改一台 slave 为 master</p><p>1) 命令该服务，不做其他 redis 的 slave<br>命令：slaveof no one</p><p>2) 修改 salve-read-only 为 no<br>命令：config set salve-read-only  no<br>其他的 slave 再指向 这个 new master A </p><p>1）命令该服务为 new master A 的 slave<br>命令: slaveofIP port 注：slaveof 127.0.0.1 6379</p><p>sentinel做的就是以上操作，不断与 master 通信， 当master 不回应，就切换其中一个为master</p><p>监控配置：</p><p>sentinel monitor def_master 127.0.0.1 6379 2(结合三十秒，监控到2次连不上才是失效)<br>sentinel auth-pass def-master 012_345^678-90 master 要不要密码</p><p>！master 被当前 sentinel 实例 认定为 失效的间隔时间<br>！如果当前的 sentinel 与 master 直接的通讯中，在指定的时间内，没有响应或者响应错误代码，那么当前 sentinel 就认为<br>master 失效，（SDOWN 主观失效）</p><p><mastername><millseconds><br>默认为 30 秒<br>sentinel down-after-millseconds def_master 30000</millseconds></mastername></p><p>当前 sentinel 实例是否允许实施 failover (故障转移)<br>no 表示当前 sentinel 为观察者(只参与投票，不参与实施 failover )<br>全局中至少有一个yes<br>sentinel can-failover def_master yes 监控到失效 允不允许把slave 改为master 在多个sentinel监控时，只一个有权利修改为master<br>failover notification-script mymaster /var/redis/notify.sh<br>parallel-syncs mymaster 1  同时几台连接到新的 master (如果瞬间全部连接，ＩＯ激增，容易GG)</p><p>配置文件： sentinel.conf （windows好像没有）<br>redis-server sentinel.conf –sentinel 启动sentinel 进程</p><p>在 配置文件中，slave-priority 100 数字越小优先级最高 改完优先把优先级高的作为新的 master </p><p>++++++++++++++++++++++++++++++++++++</p><p>实际开发技巧：key-value 与传统的 关系型数据库有何关联</p><p>如何 key 设计</p><p>书签系统： create table book(<br>    book_id int,<br>    title char(20)<br>)engine myisam charset utf8;</p><p>redis 键值设置：<br>1）把表名转换为key 前缀<br>2）主键<br>3）主键值<br>4) 写要存储的列名<br>set user:id:4:name 小明</p><p>无底洞效应:…</p><p>如何使用username 查询，只能冗余信息<br>set user:username:lisi:userid 9 维护一个相互引用的数据<br>通过 userid 查 name,mail ,age …<br>不会导致很多冗余，只是 保存 id</p><p>世上安得双修法，不负如来不负卿。。</p>]]></content>
    
    <summary type="html">
    
      simple
    
    </summary>
    
      <category term="Redis" scheme="http://blog.wddog.cn/categories/Redis/"/>
    
    
      <category term="Redis" scheme="http://blog.wddog.cn/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>php 生成唯一订单的 6 种方法</title>
    <link href="http://blog.wddog.cn/2018/03/09/PHP%E7%94%9F%E6%88%90%E5%94%AF%E4%B8%80%E8%AE%A2%E5%8D%95%E7%9A%84%206%20%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.wddog.cn/2018/03/09/PHP生成唯一订单的 6 种方法/</id>
    <published>2018-03-09T15:09:06.266Z</published>
    <updated>2018-03-09T15:16:57.112Z</updated>
    
    <content type="html"><![CDATA[<p>PHP生成唯一订单号其实是非常的简单了我们随便就可以整理多种生成方式了，这里小编整理了6种方式供各位参考。</p><p>做商城类项目经常需要生成唯一订单号，下面来个汇总！</p><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一:"></a>方法一:</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> date(<span class="string">'Ymd'</span>) . str_pad(mt_rand(<span class="number">1</span>, <span class="number">99999</span>), <span class="number">5</span>, <span class="string">'0'</span>, STR_PAD_LEFT);</span><br></pre></td></tr></table></figure><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二:"></a>方法二:</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> * uniqid - 官方是这样说的： </span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> * Gets a prefixed unique identifier based on the current time in microseconds. </span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">build_order_no</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> date(<span class="string">'Ymd'</span>).&lt;a href=<span class="string">"/tags.php/substr/"</span> target=<span class="string">"_blank"</span>&gt;substr&lt;/a&gt;(implode(<span class="keyword">NULL</span>, array_map(<span class="string">'ord'</span>, str_split(substr(uniqid(), <span class="number">7</span>, <span class="number">13</span>), <span class="number">1</span>))), <span class="number">0</span>, <span class="number">8</span>); </span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用uniqid获取一个基于当前的微秒数生成的唯一不重复的字符串（但是他的前7位貌似很久才会发生变动，所以不用考虑可删除），取其第8到13位。但是这个字符串里面有英文字母，咋办？</p><p>用ord获取他的ASCII码，所以就有了下一步：用str_split把这个字符串分割为数组，用array_map去操作（速度快点）。</p><p>然后返回的还是一个数组，KO，在用implode弄成字符串，但是字符长度不定，取前固定的几位，然后前面加上当前的年份和日期，这个方法生成的订单号，全世界不会有多少重复的。</p><p>当然，除非你把服务器时间往前调，但是调也不用怕，哥不相信他会在同一微秒内下两次订单，网络数据传输也要点时间的，即便你是在本地。</p><h4 id="方法三"><a href="#方法三" class="headerlink" title="方法三:"></a>方法三:</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">make_order</span><span class="params">($user_id)</span> </span></span><br><span class="line"><span class="function"> </span></span><br><span class="line"><span class="function"> </span>&#123; </span><br><span class="line"> </span><br><span class="line"> <span class="keyword">return</span> mt_rand(<span class="number">10</span>,<span class="number">99</span>) </span><br><span class="line"> </span><br><span class="line"> . sprintf(<span class="string">'%010d'</span>,time() - <span class="number">946656000</span>) </span><br><span class="line"> </span><br><span class="line"> . sprintf(<span class="string">'%03d'</span>, (float) microtime() * <span class="number">1000</span>) </span><br><span class="line"> </span><br><span class="line"> . sprintf(<span class="string">'%03d'</span>, (int) $user_id % <span class="number">1000</span>); </span><br><span class="line"> </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="方法四-我是比较喜欢这种方式的-O-∩-∩-O哈哈"><a href="#方法四-我是比较喜欢这种方式的-O-∩-∩-O哈哈" class="headerlink" title="方法四: 我是比较喜欢这种方式的(O(∩_∩)O哈哈~)"></a>方法四: 我是比较喜欢这种方式的(O(∩_∩)O哈哈~)</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$yCode = <span class="keyword">array</span>(<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>, <span class="string">'G'</span>, <span class="string">'H'</span>, <span class="string">'I'</span>, <span class="string">'J'</span>); </span><br><span class="line"> </span><br><span class="line">$orderSn = $yCode[intval(date(<span class="string">'Y'</span>)) - <span class="number">2011</span>] . strtoupper(dechex(date(<span class="string">'m'</span>))) . date(<span class="string">'d'</span>) . substr(time(), <span class="number">-5</span>) . substr(microtime(), <span class="number">2</span>, <span class="number">5</span>) . sprintf(<span class="string">'%02d'</span>, rand(<span class="number">0</span>, <span class="number">99</span> </span><br><span class="line">));</span><br></pre></td></tr></table></figure><h4 id="方法五-生成24位唯一订单号码"><a href="#方法五-生成24位唯一订单号码" class="headerlink" title="方法五 生成24位唯一订单号码:"></a>方法五 生成24位唯一订单号码:</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//生成24位唯一订单号码，格式：YYYY-MMDD-HHII-SS-NNNN,NNNN-CC，其中：YYYY=年份，MM=月份，DD=日期，HH=24格式小时，II=分，SS=秒，NNNNNNNN=随机数，CC=检查码 </span></span><br><span class="line">  @date_default_timezone_set(<span class="string">"PRC"</span>); </span><br><span class="line">  <span class="keyword">while</span>(<span class="keyword">true</span>)&#123; </span><br><span class="line">   <span class="comment">//订购日期 </span></span><br><span class="line">   $order_date = date(<span class="string">'Y-m-d'</span>); </span><br><span class="line">   <span class="comment">//订单号码主体（YYYYMMDDHHIISSNNNNNNNN） </span></span><br><span class="line">   $order_id_main = date(<span class="string">'YmdHis'</span>) . rand(<span class="number">10000000</span>,<span class="number">99999999</span>); </span><br><span class="line">   <span class="comment">//订单号码主体长度 </span></span><br><span class="line">   $order_id_len = strlen($order_id_main); </span><br><span class="line">   $order_id_sum = <span class="number">0</span>; </span><br><span class="line">   <span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;$order_id_len; $i++)&#123; </span><br><span class="line">    $order_id_sum += (int)(substr($order_id_main,$i,<span class="number">1</span>)); </span><br><span class="line">   &#125; </span><br><span class="line">   <span class="comment">//唯一订单号码（YYYYMMDDHHIISSNNNNNNNNCC） </span></span><br><span class="line">   $order_id = $order_id_main . str_pad((<span class="number">100</span> - $order_id_sum % <span class="number">100</span>) % <span class="number">100</span>,<span class="number">2</span>,<span class="string">'0'</span>,STR_PAD_LEFT); </span><br><span class="line">    </span><br><span class="line">   <span class="keyword">if</span>($result = sqlite_query($db,<span class="string">"SELECT * FROM orders WHERE order_id='$order_id'"</span>))&#123; </span><br><span class="line">    <span class="keyword">if</span>(sqlite_num_rows($result) == <span class="number">0</span>)&#123; </span><br><span class="line">     <span class="keyword">break</span>; </span><br><span class="line">    &#125; </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="例子六"><a href="#例子六" class="headerlink" title="例子六:"></a>例子六:</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**  </span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">* 生成16位纯数字订单号  </span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">* 最大支持时间到 2056-12-31 23:59:59  </span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">*  </span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">* <span class="doctag">@access</span> public  </span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> string  </span></span><br><span class="line"><span class="comment">//phpfensi.com </span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getOrderSN</span><span class="params">()</span> </span>&#123;  </span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> (date(<span class="string">'y'</span>) + date(<span class="string">'m'</span>) + date(<span class="string">'d'</span>)) . str_pad((time() - &lt;a href=<span class="string">"/tags.php/strtotime/"</span> target=<span class="string">"_blank"</span>&gt;strtotime&lt;/a&gt;(date(<span class="string">'Y-m-d'</span>))), <span class="number">5</span>, <span class="number">0</span>, STR_PAD_LEFT) . substr(microtime(), <span class="number">2</span>, <span class="number">6</span>) . sprintf(<span class="string">'%03d'</span>, rand(<span class="number">0</span>, <span class="number">999</span>));  </span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目前在用的,基本保证不重复了,能用到2056年,觉得应该够了,以后有需求再扩展.</p>]]></content>
    
    <summary type="html">
    
      simple
    
    </summary>
    
      <category term="PHP" scheme="http://blog.wddog.cn/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://blog.wddog.cn/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Mysql 忘记密码解决与用户创建，授权详解</title>
    <link href="http://blog.wddog.cn/2018/03/09/Mysql%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>http://blog.wddog.cn/2018/03/09/Mysql小技巧/</id>
    <published>2018-03-09T10:54:48.450Z</published>
    <updated>2018-03-09T12:47:29.576Z</updated>
    
    <content type="html"><![CDATA[<p>当你忘记 Mysql 密码时，又能操作 服务器 (Linux) 时 就能很简单的重设密码，下面就和我一起学习吧！</p><h3 id="一、Mysql-绕过密码登录"><a href="#一、Mysql-绕过密码登录" class="headerlink" title="一、Mysql 绕过密码登录"></a>一、Mysql 绕过密码登录</h3><h5 id="1-KILL掉系统里的MySQL进程；"><a href="#1-KILL掉系统里的MySQL进程；" class="headerlink" title="1. KILL掉系统里的MySQL进程；"></a>1. KILL掉系统里的MySQL进程；</h5><h5 id="2-用以下命令启动MySQL，以不检查权限的方式启动；"><a href="#2-用以下命令启动MySQL，以不检查权限的方式启动；" class="headerlink" title="2. 用以下命令启动MySQL，以不检查权限的方式启动；"></a>2. 用以下命令启动MySQL，以不检查权限的方式启动；</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld_safe --skip-grant-tables &amp;</span><br></pre></td></tr></table></figure><h5 id="3-然后用空密码方式使用root用户登录-MySQL；"><a href="#3-然后用空密码方式使用root用户登录-MySQL；" class="headerlink" title="3. 然后用空密码方式使用root用户登录 MySQL；"></a>3. 然后用空密码方式使用root用户登录 MySQL；</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root</span><br></pre></td></tr></table></figure><h5 id="4-修改-root-用户密码"><a href="#4-修改-root-用户密码" class="headerlink" title="4. 修改 root 用户密码"></a>4. 修改 root 用户密码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; update mysql.user set password=PASSWORD（&apos;123456&apos;） where User=root and host=&apos;localhost&apos;；</span><br><span class="line">mysql&gt; flush privileges；  // 把配置写入内存 生效</span><br><span class="line">mysql&gt; quit</span><br></pre></td></tr></table></figure><h5 id="5-重新启动MySQL，就可以使用新密码登录了。"><a href="#5-重新启动MySQL，就可以使用新密码登录了。" class="headerlink" title="5. 重新启动MySQL，就可以使用新密码登录了。"></a>5. 重新启动MySQL，就可以使用新密码登录了。</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p123456</span><br></pre></td></tr></table></figure><h3 id="二、MySQL添加新用户、为用户创建数据库、为新用户分配权限"><a href="#二、MySQL添加新用户、为用户创建数据库、为新用户分配权限" class="headerlink" title="二、MySQL添加新用户、为用户创建数据库、为新用户分配权限"></a>二、MySQL添加新用户、为用户创建数据库、为新用户分配权限</h3><h5 id="登录MySQL"><a href="#登录MySQL" class="headerlink" title="登录MySQL"></a>登录MySQL</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><h5 id="添加新用户"><a href="#添加新用户" class="headerlink" title="添加新用户"></a>添加新用户</h5><p>允许本地 IP 访问 localhost, 127.0.0.1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create user &apos;test&apos;@&apos;localhost&apos; identified by &apos;123456&apos;;</span><br></pre></td></tr></table></figure><h5 id="允许外网-IP-访问"><a href="#允许外网-IP-访问" class="headerlink" title="允许外网 IP 访问"></a>允许外网 IP 访问</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create user &apos;test&apos;@&apos;%&apos; identified by &apos;123456&apos;;</span><br></pre></td></tr></table></figure><h5 id="刷新授权"><a href="#刷新授权" class="headerlink" title="刷新授权"></a>刷新授权</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h5 id="为用户创建数据库"><a href="#为用户创建数据库" class="headerlink" title="为用户创建数据库"></a>为用户创建数据库</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database test DEFAULT CHARSET utf8 COLLATE utf8_general_ci;</span><br></pre></td></tr></table></figure><h5 id="为新用户分配权限"><a href="#为新用户分配权限" class="headerlink" title="为新用户分配权限"></a>为新用户分配权限</h5><h6 id="授予用户通过外网IP对于该数据库的全部权限"><a href="#授予用户通过外网IP对于该数据库的全部权限" class="headerlink" title="授予用户通过外网IP对于该数据库的全部权限"></a>授予用户通过外网IP对于该数据库的全部权限</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on `testdb`.* to &apos;test&apos;@&apos;%&apos; identified by &apos;123456&apos;;</span><br></pre></td></tr></table></figure><h5 id="授予用户在本地服务器对该数据库的全部权限"><a href="#授予用户在本地服务器对该数据库的全部权限" class="headerlink" title="授予用户在本地服务器对该数据库的全部权限"></a>授予用户在本地服务器对该数据库的全部权限</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on `testdb`.* to &apos;test&apos;@&apos;localhost&apos; identified by &apos;123456&apos;;</span><br></pre></td></tr></table></figure><h5 id="刷新权限"><a href="#刷新权限" class="headerlink" title="刷新权限"></a>刷新权限</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h5 id="退出-root-重新登录"><a href="#退出-root-重新登录" class="headerlink" title="退出 root 重新登录"></a>退出 root 重新登录</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure><h5 id="用新帐号-test-重新登录，由于使用的是-任意IP连接，所以需要指定外部访问IP"><a href="#用新帐号-test-重新登录，由于使用的是-任意IP连接，所以需要指定外部访问IP" class="headerlink" title="用新帐号 test 重新登录，由于使用的是 % 任意IP连接，所以需要指定外部访问IP"></a>用新帐号 test 重新登录，由于使用的是 % 任意IP连接，所以需要指定外部访问IP</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u test -h 115.28.203.224 -p</span><br></pre></td></tr></table></figure><p>在Ubuntu服务器下，MySQL默认是只允许本地登录，因此需要修改配置文件将地址绑定给注释掉：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Instead of skip-networking the default is now to listen only on  </span><br><span class="line"># localhost which is more compatible and is not less secure.  </span><br><span class="line">#bind-address       = 127.0.0.1     #注释掉这一行就可以远程登录了</span><br></pre></td></tr></table></figure><p><strong>不然会报如下错误：</strong></p><p>ERROR 2003 (HY000): Can’t connect to MySQL server on ‘host’ (111)</p>]]></content>
    
    <summary type="html">
    
      simple
    
    </summary>
    
      <category term="Mysql" scheme="http://blog.wddog.cn/categories/Mysql/"/>
    
    
      <category term="Mysql" scheme="http://blog.wddog.cn/tags/Mysql/"/>
    
      <category term="PHP" scheme="http://blog.wddog.cn/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>又重新搭建了一个博客，此次使用 Hexo + Github 搭建</title>
    <link href="http://blog.wddog.cn/2018/03/05/%E5%89%8D%E8%A8%80/"/>
    <id>http://blog.wddog.cn/2018/03/05/前言/</id>
    <published>2018-03-05T10:42:08.835Z</published>
    <updated>2018-03-06T03:32:31.908Z</updated>
    
    <content type="html"><![CDATA[<p>使用 Hexo 搭建个人博客还是很简单的，极其轻松，使用也简单，最好的是你甚至不需要 域名，也不需要服务器，在 Github<br>上注册一个账号，你就能很快的搭建一个好看又好用的博客了，这对学生党而言就是福音了，毕竟穷(我也一脸穷苦相，妈耶！)</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Hexo 的文章格式也极其简单，使用的 Markdown 标记语言,你只需要记住几个简单的标记，就能满足日常使用的。。。(不像 HTML 那一堆的标记，简直记得头大)<br>接下来就告诉你一些 简单 Markdown 快 get 到自己的 Blog 吧</p><h3 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">##### 四级标题</span><br><span class="line">###### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><h5 id="效果如下："><a href="#效果如下：" class="headerlink" title="效果如下："></a>效果如下：</h5><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h5 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h5><h6 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h6><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h3 id="二、列表"><a href="#二、列表" class="headerlink" title="二、列表"></a>二、列表</h3><p>Markdown 支持有序列表和无序列表。</p><h4 id="无序列表使用-、-和-作为列表标记："><a href="#无序列表使用-、-和-作为列表标记：" class="headerlink" title="无序列表使用-、+和*作为列表标记："></a>无序列表使用-、+和*作为列表标记：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">- Red</span><br><span class="line">- Green</span><br><span class="line">- Blue</span><br><span class="line"></span><br><span class="line">* Red</span><br><span class="line">* Green</span><br><span class="line">* Blue</span><br><span class="line"></span><br><span class="line">+ Red</span><br><span class="line">+ Green</span><br><span class="line">+ Blue</span><br></pre></td></tr></table></figure><h5 id="效果如下：-1"><a href="#效果如下：-1" class="headerlink" title="效果如下："></a>效果如下：</h5><ul><li>Red</li><li>Green</li><li>Blue</li></ul><h4 id="有序列表则使用数字加英文句点-来表示："><a href="#有序列表则使用数字加英文句点-来表示：" class="headerlink" title="有序列表则使用数字加英文句点.来表示："></a>有序列表则使用数字加英文句点.来表示：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. Red</span><br><span class="line">2. Green</span><br><span class="line">3. Blue</span><br></pre></td></tr></table></figure><h5 id="效果如下：-2"><a href="#效果如下：-2" class="headerlink" title="效果如下："></a>效果如下：</h5><ol><li>Red</li><li>Green</li><li>Blue</li></ol><h3 id="三、引用"><a href="#三、引用" class="headerlink" title="三、引用"></a>三、引用</h3><p>引用以&gt;来表示，引用中支持多级引用、标题、列表、代码块、分割线等常规语法。</p><p>常见的引用写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这是一段引用    //在`&gt;`后面有 1 个空格</span><br><span class="line">&gt; </span><br><span class="line">&gt;     这是引用的代码块形式    //在`&gt;`后面有 5 个空格</span><br><span class="line">&gt;     </span><br><span class="line">&gt; 代码例子：</span><br><span class="line">&gt;   </span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&gt; 一级引用</span><br><span class="line">&gt; &gt; 二级引用</span><br><span class="line">&gt; &gt; &gt; 三级引用</span><br><span class="line"></span><br><span class="line">&gt; #### 这是一个四级标题</span><br><span class="line">&gt; </span><br><span class="line">&gt; 1. 这是第一行列表项</span><br><span class="line">&gt; 2. 这是第二行列表项</span><br></pre></td></tr></table></figure><h5 id="效果如下：-3"><a href="#效果如下：-3" class="headerlink" title="效果如下："></a>效果如下：</h5><blockquote><p>这是一段引用    //在<code>&gt;</code>后面有 1 个空格</p><pre><code>这是引用的代码块形式    //在`&gt;`后面有 5 个空格</code></pre><p>代码例子：</p><pre><code>protected void onCreate(Bundle savedInstanceState) {    super.onCreate(savedInstanceState);    setContentView(R.layout.activity_main);}</code></pre></blockquote><blockquote><p>一级引用</p><blockquote><p>二级引用</p><blockquote><p>三级引用</p></blockquote></blockquote></blockquote><blockquote><h4 id="这是一个四级标题"><a href="#这是一个四级标题" class="headerlink" title="这是一个四级标题"></a>这是一个四级标题</h4><ol><li>这是第一行列表项</li><li>这是第二行列表项</li></ol></blockquote><h3 id="四、强调"><a href="#四、强调" class="headerlink" title="四、强调"></a>四、强调</h3><p>两个<em>或-代表加粗，一个</em>或-代表斜体，~~代表删除。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">**加粗文本** 或者 __加粗文本__</span><br><span class="line"></span><br><span class="line">*斜体文本*  或者_斜体文本_</span><br><span class="line"></span><br><span class="line">~~删除文本~~</span><br></pre></td></tr></table></figure><h5 id="效果如下：-4"><a href="#效果如下：-4" class="headerlink" title="效果如下："></a>效果如下：</h5><p><strong>加粗文本</strong> 或者 <strong>加粗文本</strong></p><p><em>斜体文本</em>  或者<em>斜体文本</em></p><p><del>删除文本</del></p><h3 id="五、图片与链接"><a href="#五、图片与链接" class="headerlink" title="五、图片与链接"></a>五、图片与链接</h3><p>图片与链接的语法很像，区别在一个 ! 号。二者格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">图片：![]()    ![图片文本(可忽略)](图片地址)</span><br><span class="line"></span><br><span class="line">链接：[]()     [链接文本](链接地址)</span><br></pre></td></tr></table></figure><p>链接又分为行内式、参考式和 自动链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">这是行内式链接：[ConnorLin&apos;s Blog](http://connorlin.github.io)。</span><br><span class="line"></span><br><span class="line">这是参考式链接：[ConnorLin&apos;s Blog][url]，其中url为链接标记，可置于文中任意位置。</span><br><span class="line"></span><br><span class="line">[url]: http://connorlin.github.io/ &quot;ConnorLin&apos;s Blog&quot;</span><br><span class="line"></span><br><span class="line">链接标记格式为：[链接标记文本]:  链接地址  链接title(可忽略)</span><br><span class="line"></span><br><span class="line">这是自动链接：直接使用`&lt;&gt;`括起来&lt;http://connorlin.github.io&gt;</span><br><span class="line"></span><br><span class="line">这是图片：![][avatar]</span><br><span class="line"></span><br><span class="line">[avatar]: https://connorlin.github.io/images/avatar.jpg</span><br></pre></td></tr></table></figure><h5 id="效果如下：-5"><a href="#效果如下：-5" class="headerlink" title="效果如下："></a>效果如下：</h5><p>这是行内式链接：<a href="http://connorlin.github.io" target="_blank" rel="noopener">ConnorLin’s Blog</a>。</p><p>这是参考式链接：<a href="http://connorlin.github.io/" title="ConnorLin&#39;s Blog" target="_blank" rel="noopener">ConnorLin’s Blog</a>，其中url为链接标记，可置于文中任意位置。</p><p>链接标记格式为：[链接标记文本]:  链接地址  链接title(可忽略)</p><p>这是自动链接：直接使用<code>&lt;&gt;</code>括起来<a href="http://connorlin.github.io" target="_blank" rel="noopener">http://connorlin.github.io</a></p><p>这是图片：<img src="https://connorlin.github.io/images/avatar.jpg" alt=""></p><h3 id="六、代码"><a href="#六、代码" class="headerlink" title="六、代码"></a>六、代码</h3><p>代码分为行内代码和代码块。</p><p>行内代码使用 <code>代码</code> 标识，可嵌入文字中</p><p>代码块使用4个空格或<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>这里是代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">代码语法高亮在 ```后面加上空格和语言名称即可</span><br><span class="line"></span><br><span class="line">``` 语言</span><br><span class="line">//注意语言前面有空格</span><br><span class="line">这里是代码</span><br></pre></td></tr></table></figure></p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">这是行内代码`onCreate(Bundle savedInstanceState)`的例子。</span><br><span class="line"></span><br><span class="line">这是代码块和语法高亮：</span><br><span class="line"></span><br><span class="line">``` java</span><br><span class="line">// 注意java前面有空格</span><br><span class="line">protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">    super.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="效果如下：-6"><a href="#效果如下：-6" class="headerlink" title="效果如下："></a>效果如下：</h5><p>这是行内代码onCreate(Bundle savedInstanceState)的例子。</p><p>这是代码块和语法高亮：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"我真是一个又帅又令人发情的 Boy"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="七、表格"><a href="#七、表格" class="headerlink" title="七、表格"></a>七、表格</h3><p>表格对齐格式</p><ul><li>居左：:—-</li><li>居中：:—-:或—–</li><li>居右：—-:</li></ul><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">|标题|标题|标题|</span><br><span class="line">|:---|:---:|---:|</span><br><span class="line">|居左测试文本|居中测试文本|居右测试文本|</span><br><span class="line">|居左测试文本1|居中测试文本2|居右测试文本3|</span><br><span class="line">|居左测试文本11|居中测试文本22|居右测试文本33|</span><br><span class="line">|居左测试文本111|居中测试文本222|居右测试文本333|</span><br></pre></td></tr></table></figure><h5 id="效果如下：-7"><a href="#效果如下：-7" class="headerlink" title="效果如下："></a>效果如下：</h5><table><thead><tr><th style="text-align:left">标题</th><th style="text-align:center">标题</th><th style="text-align:right">标题</th></tr></thead><tbody><tr><td style="text-align:left">居左测试文本</td><td style="text-align:center">居中测试文本</td><td style="text-align:right">居右测试文本</td></tr><tr><td style="text-align:left">居左测试文本1</td><td style="text-align:center">居中测试文本2</td><td style="text-align:right">居右测试文本3</td></tr><tr><td style="text-align:left">居左测试文本11</td><td style="text-align:center">居中测试文本22</td><td style="text-align:right">居右测试文本33</td></tr><tr><td style="text-align:left">居左测试文本111</td><td style="text-align:center">居中测试文本222</td><td style="text-align:right">居右测试文本333</td></tr></tbody></table><h3 id="八、分割线"><a href="#八、分割线" class="headerlink" title="八、分割线"></a>八、分割线</h3><p>在一行中用三个以上的*、-、_来建立一个分隔线，行内不能有其他东西。也可以在符号间插入空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">***</span><br><span class="line">---</span><br><span class="line">___</span><br><span class="line"></span><br><span class="line">* * *</span><br></pre></td></tr></table></figure><p>效果均为一条分割线：</p><hr><hr><h3 id="九、换行"><a href="#九、换行" class="headerlink" title="九、换行"></a>九、换行</h3><p>在行尾添加两个空格加回车表示换行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一行后面加两个空格  换行</span><br></pre></td></tr></table></figure><h5 id="效果如下：-8"><a href="#效果如下：-8" class="headerlink" title="效果如下："></a>效果如下：</h5><p>这是一行后面加两个空格<br>换行</p><hr><h3 id="十、脚注-注解"><a href="#十、脚注-注解" class="headerlink" title="十、脚注(注解)"></a>十、脚注(注解)</h3><p>使用[^]来定义脚注：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是一个脚注的例子[^1]</span><br><span class="line"></span><br><span class="line">[^1]: 这里是脚注</span><br></pre></td></tr></table></figure><h5 id="效果如下：-9"><a href="#效果如下：-9" class="headerlink" title="效果如下："></a>效果如下：</h5><p>这是一个脚注的例子[^1]</p><h3 id="扩展："><a href="#扩展：" class="headerlink" title="扩展："></a>扩展：</h3><h4 id="常用弥补Markdown的Html标签"><a href="#常用弥补Markdown的Html标签" class="headerlink" title="常用弥补Markdown的Html标签"></a>常用弥补Markdown的Html标签</h4><h4 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;font face=&quot;微软雅黑&quot; color=&quot;red&quot; size=&quot;6&quot;&gt;字体及字体颜色和大小&lt;/font&gt;</span><br><span class="line">&lt;font color=&quot;#0000ff&quot;&gt;字体颜色&lt;/font&gt;</span><br></pre></td></tr></table></figure><h5 id="效果如下：-10"><a href="#效果如下：-10" class="headerlink" title="效果如下："></a>效果如下：</h5><font face="微软雅黑" color="red" size="6">字体及字体颜色和大小</font><br><font color="#0000ff">字体颜色</font><hr><p><strong>换行</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用html标签`&lt;br/&gt;`&lt;br/&gt;换行</span><br></pre></td></tr></table></figure><h5 id="效果如下：-11"><a href="#效果如下：-11" class="headerlink" title="效果如下："></a>效果如下：</h5><p>使用html标签<br><br>换行</p><hr><p><strong>文本对齐方式</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;p align=&quot;left&quot;&gt;居左文本&lt;/p&gt;</span><br><span class="line">&lt;p align=&quot;center&quot;&gt;居中文本&lt;/p&gt;</span><br><span class="line">&lt;p align=&quot;right&quot;&gt;居右文本&lt;/p&gt;</span><br></pre></td></tr></table></figure><h5 id="效果如下：-12"><a href="#效果如下：-12" class="headerlink" title="效果如下："></a>效果如下：</h5><p align="left">居左文本</p><br><p align="center">居中文本</p><br><p align="right">居右文本</p><hr><p><strong>下划线</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;u&gt;下划线文本&lt;/u&gt;</span><br></pre></td></tr></table></figure><h5 id="效果如下：-13"><a href="#效果如下：-13" class="headerlink" title="效果如下："></a>效果如下：</h5><p><u>下划线文本</u></p><p><strong>That’s all, Enjoy it!</strong></p>]]></content>
    
    <summary type="html">
    
      simple
    
    </summary>
    
      <category term="Hexo教程" scheme="http://blog.wddog.cn/categories/Hexo%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Hexo" scheme="http://blog.wddog.cn/tags/Hexo/"/>
    
      <category term="Github" scheme="http://blog.wddog.cn/tags/Github/"/>
    
  </entry>
  
</feed>
